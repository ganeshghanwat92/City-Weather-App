plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.example.cityweatherapp"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding true
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'


    def dagger_android_version = '2.25.2'
    api "com.google.dagger:dagger:$dagger_android_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_android_version"
    api "com.google.dagger:dagger-android:$dagger_android_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_android_version"
    api "com.google.dagger:dagger-android-support:$dagger_android_version"


    // retrofit
    def retrofit_version = "2.6.2"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"


    // lifecycle
    def lifecycle_version = "2.3.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    // room db
    def room_version = "2.2.6"

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    // work manager
    def work_version = "2.4.0"
    // Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:$work_version"


    // testing
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation "androidx.test:rules:1.3.0"
    androidTestImplementation 'com.android.support.test:runner:1.0.2'

    // testImplementation for pure JVM unit tests
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.2"

    releaseImplementation 'org.mockito:mockito-core:2.23.0'
    // for kotlin classes
    testImplementation 'org.mockito:mockito-inline:2.13.0'
    //  androidTestImplementation "android.arch.core:core-testing:1.1.1"
    kapt "androidx.lifecycle:lifecycle-compiler:2.3.0" // For Kotlin use kapt instead of annotationProcessor

    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation 'org.hamcrest:hamcrest-library:1.3'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"

}